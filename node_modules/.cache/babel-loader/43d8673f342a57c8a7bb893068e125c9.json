{"ast":null,"code":"var _jsxFileName = \"/Users/angelhernandez/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Study() {\n  _s();\n\n  var _deck$cards;\n\n  const {\n    deckId\n  } = useParams();\n  const {\n    url\n  } = useRouteMatch();\n  const history = useHistory();\n  const [deck, setDeck] = useState({});\n  useEffect(deck => {\n    setDeck([]);\n    const abortController = new AbortController();\n\n    async function loadDeck() {\n      try {\n        const deckFromApi = await readDeck(deckId);\n        setDeck(deckFromApi);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDeck();\n    return () => {\n      console.log(\"abort\");\n      abortController.abort(); // Cancels any pending request or response\n    };\n  }, []);\n  const notEnough = `<h2>Not Enough Cards.</h2> \\n <p>You need at least 3 cards to study.</p>`;\n  const studyCards = (deck === null || deck === void 0 ? void 0 : (_deck$cards = deck.cards) === null || _deck$cards === void 0 ? void 0 : _deck$cards.lenth) >= 3 ? 'study' : notEnough;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/`,\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: studyCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Study, \"XxWoKcdlurje2PspEAv626FZnm8=\", false, function () {\n  return [useParams, useRouteMatch, useHistory];\n});\n\n_c = Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/angelhernandez/Documents/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useEffect","useState","Link","useParams","useHistory","useRouteMatch","readDeck","NotFound","Study","deckId","url","history","deck","setDeck","abortController","AbortController","loadDeck","deckFromApi","error","name","console","log","abort","notEnough","studyCards","cards","lenth","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,UAAzB,EAAqCC,aAArC,QAA0D,kBAA1D;AACA,SAASC,QAAT,QAAwB,cAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAAA;;AAE3B,QAAM;AAACC,IAAAA;AAAD,MAAWN,SAAS,EAA1B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAUL,aAAa,EAA7B;AACA,QAAMM,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAEY,IAAD,IAAU;AAChBC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,QAAf,GAAyB;AACrB,UAAI;AACA,cAAMC,WAAW,GAAG,MAAMX,QAAQ,CAACG,MAAD,CAAlC;AACAI,QAAAA,OAAO,CAACI,WAAD,CAAP;AAEH,OAJD,CAIC,OAAOC,KAAP,EAAc;AACf,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AACjC;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACC,SAHD,MAGO;AACP,gBAAMH,KAAN;AACC;AACJ;AACJ;;AAEDF,IAAAA,QAAQ;AAER,WAAO,MAAM;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAP,MAAAA,eAAe,CAACQ,KAAhB,GAFa,CAEY;AACxB,KAHD;AAIC,GAzBQ,EAyBN,EAzBM,CAAT;AA0BA,QAAMC,SAAS,GAAI,0EAAnB;AACA,QAAMC,UAAU,GAAG,CAAAZ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,2BAAAA,IAAI,CAAEa,KAAN,4DAAaC,KAAb,KAAsB,CAAtB,GAAyB,OAAzB,GAAmCH,SAAtD;AACJ,sBAAQ;AAAA,4BACJ;AAAK,oBAAW,YAAhB;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCAAgC,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCAAgC,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASX,IAAI,CAACe,EAAG,EAA5B;AAAA,sBAAgCf,IAAI,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI,eAQJ;AAAA,8BACI;AAAA,8BAAYP,IAAI,CAACO,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAMK;AAAN;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARI;AAAA,kBAAR;AAaC;;GAhDuBhB,K;UAEHL,S,EACDE,a,EACAD,U;;;KAJII,K","sourcesContent":["import React,{useEffect, useState} from \"react\";\nimport {Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck} from \"../utils/api\";\nimport NotFound from \"./NotFound\";\n\nexport default function Study(){\n    \n    const {deckId} = useParams();\n    const { url } = useRouteMatch();\n    const history = useHistory();\n    const [deck, setDeck] = useState({});\n\n    useEffect((deck) => {\n        setDeck([]);\n        const abortController = new AbortController();\n\n        async function loadDeck(){\n            try {\n                const deckFromApi = await readDeck(deckId);\n                setDeck(deckFromApi);\n            \n            }catch (error) {\n            if (error.name === \"AbortError\") {\n            // Ignore `AbortError`\n            console.log(\"Aborted\");\n            } else {\n            throw error;\n            }\n        }\n    }\n\n    loadDeck();\n\n    return () => {\n    console.log(\"abort\");\n    abortController.abort(); // Cancels any pending request or response\n    };\n    }, []);\n    const notEnough = `<h2>Not Enough Cards.</h2> \\n <p>You need at least 3 cards to study.</p>`\n    const studyCards = deck?.cards?.lenth >= 3? 'study' : notEnough;\nreturn (<>\n    <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><Link to={`/`}>Home</Link></li>\n            <li className=\"breadcrumb-item\"><Link to={`/decks/${deck.id}`}>{deck.name}</Link></li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">study</li>\n        </ol> \n    </nav>\n    <div>\n        <h2>Study: {deck.name}</h2>\n        <div>{studyCards}</div>\n    </div>\n    </>)\n}"]},"metadata":{},"sourceType":"module"}